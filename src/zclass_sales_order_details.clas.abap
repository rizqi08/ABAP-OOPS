class ZCLASS_SALES_ORDER_DETAILS definition
  public
  final
  create public .

public section.

  methods GET_DATA
    importing
      !PVBELN type VBELN_VA
    exporting
      !LT_OUTPUT type ZTSTR_SALES_DETAILS .
  methods GET_MULTIPLE_DATA
    importing
      !SVBELN type ZTSTR_RANGE_SALES_ORDER
    exporting
      !LT_OUTPUT type ZTSTR_SALES_DETAILS .
protected section.
private section.
ENDCLASS.



CLASS ZCLASS_SALES_ORDER_DETAILS IMPLEMENTATION.


  METHOD GET_DATA.
    TYPES : BEGIN OF LTY_DATA,
              VBELN TYPE VBELN_VA,
              ERDAT TYPE ERDAT,
              ERZET TYPE ERZET,
              ERNAM TYPE ERNAM,
            END OF LTY_DATA,
            BEGIN OF LTY_DATA1,
              VBELN TYPE VBELN_VA,
              POSNR TYPE POSNR_VA,
              MATNR TYPE MATNR,
            END OF LTY_DATA1.

    DATA : LT_DATA    TYPE TABLE OF LTY_DATA,
           LWA_DATA   TYPE LTY_DATA,
           LT_DATA1   TYPE TABLE OF LTY_DATA1,
           LWA_DATA1  TYPE LTY_DATA1,
           LWA_OUTPUT TYPE ZSTR_SALES_DETAILS,
           LV_TABIX   TYPE I.

    SELECT VBELN ERDAT ERZET ERNAM
    FROM VBAK
    INTO TABLE LT_DATA
    WHERE VBELN = PVBELN.

    IF LT_DATA IS NOT INITIAL.
      SELECT VBELN POSNR MATNR
      FROM VBAP
      INTO TABLE LT_DATA1
      FOR ALL ENTRIES IN LT_DATA
      WHERE VBELN = LT_DATA-VBELN.
    ENDIF.

    SORT : LT_DATA BY VBELN,
           LT_DATA1 BY VBELN.

    "Parallel cursor
    LV_TABIX = 1.
    LOOP AT LT_DATA INTO LWA_DATA.
      LOOP AT LT_DATA1 FROM LV_TABIX INTO LWA_DATA1.
        IF LWA_DATA-VBELN <> LWA_DATA1-VBELN.
          LV_TABIX = SY-TABIX.
          EXIT.
        ENDIF.

        LWA_OUTPUT-VBELN = LWA_DATA-VBELN.
        LWA_OUTPUT-ERDAT = LWA_DATA-ERDAT.
        LWA_OUTPUT-ERZET = LWA_DATA-ERZET.
        LWA_OUTPUT-ERNAM = LWA_DATA-ERNAM.
        LWA_OUTPUT-POSNR = LWA_DATA1-POSNR.
        LWA_OUTPUT-MATNR = LWA_DATA1-MATNR.
        APPEND LWA_OUTPUT TO LT_OUTPUT.
        CLEAR : LWA_OUTPUT.
      ENDLOOP.
    ENDLOOP.
  ENDMETHOD.


  METHOD GET_MULTIPLE_DATA.
    TYPES : BEGIN OF LTY_DATA,
              VBELN TYPE VBELN_VA,
              ERDAT TYPE ERDAT,
              ERZET TYPE ERZET,
              ERNAM TYPE ERNAM,
            END OF LTY_DATA,
            BEGIN OF LTY_DATA1,
              VBELN TYPE VBELN_VA,
              POSNR TYPE POSNR_VA,
              MATNR TYPE MATNR,
            END OF LTY_DATA1.

    DATA : LT_DATA    TYPE TABLE OF LTY_DATA,
           LWA_DATA   TYPE LTY_DATA,
           LT_DATA1   TYPE TABLE OF LTY_DATA1,
           LWA_DATA1  TYPE LTY_DATA1,
           LWA_OUTPUT TYPE ZSTR_SALES_DETAILS,
           LV_TABIX   TYPE I.

    SELECT VBELN ERDAT ERZET ERNAM
    FROM VBAK
    INTO TABLE LT_DATA
    WHERE VBELN IN SVBELN.

    IF LT_DATA IS NOT INITIAL.
      SELECT VBELN POSNR MATNR
      FROM VBAP
      INTO TABLE LT_DATA1
      FOR ALL ENTRIES IN LT_DATA
      WHERE VBELN = LT_DATA-VBELN.
    ENDIF.

    SORT : LT_DATA BY VBELN,
           LT_DATA1 BY VBELN.

    "Parallel cursor
    LV_TABIX = 1.
    LOOP AT LT_DATA INTO LWA_DATA.
      LOOP AT LT_DATA1 FROM LV_TABIX INTO LWA_DATA1.
        IF LWA_DATA-VBELN <> LWA_DATA1-VBELN.
          LV_TABIX = SY-TABIX.
          EXIT.
        ENDIF.

        LWA_OUTPUT-VBELN = LWA_DATA-VBELN.
        LWA_OUTPUT-ERDAT = LWA_DATA-ERDAT.
        LWA_OUTPUT-ERZET = LWA_DATA-ERZET.
        LWA_OUTPUT-ERNAM = LWA_DATA-ERNAM.
        LWA_OUTPUT-POSNR = LWA_DATA1-POSNR.
        LWA_OUTPUT-MATNR = LWA_DATA1-MATNR.
        APPEND LWA_OUTPUT TO LT_OUTPUT.
        CLEAR : LWA_OUTPUT.
      ENDLOOP.
    ENDLOOP.
  ENDMETHOD.
ENDCLASS.
